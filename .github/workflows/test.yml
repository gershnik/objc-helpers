name: Test

on: 
  push:
    branches: 
      - '*'
      - '*/**'
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'doc/**'
      - 'sample/**'
      - 'tools/create-release.py'
      - '.github/workflows/publish.yml'

env:
  DEVELOPER_DIR: /Applications/Xcode_15.0.app

jobs:
  main:
    runs-on: macOS-13
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build tests
      shell: bash
      run: xcodebuild build -project test/test.xcodeproj -scheme test -config Release -derivedDataPath DerivedData

    - name: Run tests
      shell: bash
      run: DerivedData/Build/Products/Release/test

  linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare
      shell: bash
      run: |
        echo "::group::Update System"
        sudo apt-get install -y ninja-build
        echo "::endgroup::"
        
        echo "::group::Clang"
        wget https://apt.llvm.org/llvm.sh
        chmod u+x llvm.sh
        sudo ./llvm.sh 16
        echo "::endgroup::"
        
        echo "::group::libdispatch"
        git clone --depth=1 https://github.com/apple/swift-corelibs-libdispatch.git
        cd swift-corelibs-libdispatch
        cmake -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -S . -B build
        cmake --build build
        sudo cmake --install build --prefix=/usr
        echo "::endgroup::"


    - name: Build tests
      shell: bash
      run: |
        cd test
        CLANG=clang++-16 make

    - name: Run tests
      shell: bash
      run: test/build/test
